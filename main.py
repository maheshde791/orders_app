import csv
from collections import defaultdict

def calculate_monthly_revenue(data):
    monthly_revenue = defaultdict(float)
    for row in data:
        order_date = row['order_date']
        revenue = float(row['product_price']) * int(row['quantity'])
        #It will add per month revenue in dict format where month is key
        month = order_date.split('-')[1]
        monthly_revenue[month] += revenue
    return monthly_revenue

def calculate_product_revenue(data):
    product_revenue = defaultdict(float)
    for row in data:
        revenue = float(row['product_price']) * int(row['quantity'])
        product_revenue[row['product_id']] += revenue
    return product_revenue

def calculate_customer_revenue(data):
    customer_revenue = defaultdict(float)
    for row in data:
        revenue = float(row['product_price']) * int(row['quantity'])
        customer_revenue[row['customer_id']] += revenue
    return customer_revenue

def identify_top_customers(customer_revenue, n=10):
    sorted_customers = sorted(customer_revenue.items(), key=lambda x: x[1], reverse=True)
    top_customers = sorted_customers[:n]
    return top_customers

# Read data from the CSV file
data = []
with open('orders.csv', 'r') as csvfile:
    reader = csv.DictReader(csvfile)
    for row in reader:
        data.append(row)

# Calculate total revenue generated by month
monthly_revenue = calculate_monthly_revenue(data)
print("Total revenue generated by month:")
for month, revenue in monthly_revenue.items():
    print(f"Month: {month}, Revenue: {revenue}")

# Calculate total revenue generated by product
product_revenue = calculate_product_revenue(data)
print("\nTotal revenue generated by product:")
for product_id, revenue in product_revenue.items():
    print(f"Product ID: {product_id}, Revenue: {revenue}")

# Calculate total revenue generated by customer
customer_revenue = calculate_customer_revenue(data)
print("\nTotal revenue generated by customer:")
for customer_id, revenue in customer_revenue.items():
    print(f"Customer ID: {customer_id}, Revenue: {revenue}")

# Identify top 10 customers by revenue generated
top_customers = identify_top_customers(customer_revenue, n=10)
print("\nTop 10 customers by revenue generated:")
for customer, revenue in top_customers:
    print(f"Customer ID: {customer}, Revenue: {revenue}")
